# jb-todo: how do we do permutations?
# jb-todo: `desc` gets a bit hairy due to lack of proper defaults at the moment

compute:
    motion-blur:
        cs:
            filename: "{{ template_id }}::motion_blur.cs.hlsl"
            entry_point: "main"
    wireframe:
        cs:
            filename: "{{ template_id }}::wireframe.cs.hlsl"
            entry_point: "main"

    # Selection AABB debug
    draw_selection_bounding_box:
        cs:
            filename: "{{ template_id }}::debug/draw_selection_bounding_box.hlsl"
            entry_point: "main"

x-default-blend-state: &default-blend-state
    src_color: One
    src_alpha: One
    dst_color: Zero
    dst_alpha: Zero
    op_color: Add
    op_alpha: Add
    enable: false

x-depth-test-enabled-writes-disabled: &depth-test-enabled-writes-disabled
    depth_test_enable: true
    depth_write_enable: false
    depth_func: Greater
    depth_bias: 0.0
    slope_scaled_depth_bias: 0.0
    depth_clamp: false

x-depth-test-disabled: &depth-test-disabled
    depth_test_enable: false
    depth_write_enable: false
    depth_func: Greater
    depth_bias: 0.0
    slope_scaled_depth_bias: 0.0
    depth_clamp: false

x-debug-tangents-render-state: &debug-tangents-render-state
    blend_states: [*default-blend-state]
    cull_mode: Front
    depth: *depth-test-enabled-writes-disabled
    conservative_raster: Disabled

x-debug-tangents-render-pass-desc: &debug-tangents-render-pass-desc
    depth_stencil_target:
        mode: DepthStencilRenderTarget
        format: D32Float
        depth_load_op: Load
        depth_store_op: Discard
        stencil_load_op: Load
        stencil_store_op: Discard
    render_targets:
        - format: R8g8b8a8Unorm
          load_op: Load
          store_op: Store
